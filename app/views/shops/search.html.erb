<!-- app/views/shops/search.html.erb -->
<div class="max-w-xl mx-auto mt-12 p-6 bg-white rounded-xl shadow-md space-y-4">
  <h1 class="text-xl font-bold text-center">自転車店を検索</h1>

  <!-- GETメソッドでresult_shops_pathに送信 -->
  <%= form_with url: result_shops_path, method: :get, local: true, html: { id: "search-form" } do |f| %>
    <!-- 住所入力 -->
    <div>
      <%= f.label :address, "住所を入力", class: "block font-semibold" %>
      <%= f.text_field :address, class: "w-full p-2 border rounded", id: "address-input" %>
    </div>
    <!-- キーワード検索 -->
    <div>
      <%= f.label :keyword, "キーワード検索", class: "block font-semibold" %>
      <%= f.text_field :keyword, placeholder: "例: 修理 ロードバイク", class: "w-full p-2 border rounded" %>
    </div>

    <!-- 検索範囲 -->
    <div>
      <%= f.label :radius, "検索範囲", class: "block font-semibold" %>
      <%= f.select :radius,
            options_for_select([["1km", 1000], ["3km", 3000], ["5km", 5000]], selected: params[:radius]),
            {},
            class: "w-full p-2 border rounded" %>
    </div>

    <!-- ボタンエリア -->
    <div class="flex justify-between mt-4">
      <!-- 現在地取得ボタン -->
      <button type="button" onclick="getCurrentLocation()" class="bg-green-500 hover:bg-green-600 text-black py-2 px-4 rounded">
        現在地を取得
      </button>

      <!-- フォーム送信ボタン -->
      <%= f.submit "検索", class: "bg-blue-500 hover:bg-blue-600 text-black py-2 px-4 rounded" %>
    </div>

    <!-- 非表示の緯度・経度フィールド -->
    <%= hidden_field_tag :lat, "", id: "lat-field" %>
    <%= hidden_field_tag :lng, "", id: "lng-field" %>
  <% end %>
</div>

<!-- Google Maps JS + Places API（旧） -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&libraries=places&callback=initAutocomplete" async defer></script>

<script>
  function initAutocomplete() {
    const addressInput = document.getElementById("address-input");
    if (!addressInput) return;

    const autocomplete = new google.maps.places.Autocomplete(addressInput, {
      types: ["geocode"],
      componentRestrictions: { country: "jp" }
    });

    // 候補選択時に hidden にセット
    autocomplete.addListener("place_changed", () => {
      const place = autocomplete.getPlace();
      if (!place.geometry) return;

      document.getElementById("lat-field").value = place.geometry.location.lat();
      document.getElementById("lng-field").value = place.geometry.location.lng();

      console.log("選択住所:", place.formatted_address);
      console.log("緯度:", place.geometry.location.lat(), "経度:", place.geometry.location.lng());
    });

    // 入力中は hidden をリセット
    addressInput.addEventListener("input", () => {
      document.getElementById("lat-field").value = "";
      document.getElementById("lng-field").value = "";
    });

    // z-index を上げて候補が隠れないように
    const style = document.createElement("style");
    style.innerHTML = ".pac-container { z-index: 9999 !important; }";
    document.head.appendChild(style);
  }

  // 現在地取得
  window.getCurrentLocation = function() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        function(position) {
          document.getElementById("lat-field").value = position.coords.latitude;
          document.getElementById("lng-field").value = position.coords.longitude;
          document.getElementById("search-form").submit();
        },
        function() { alert("位置情報の取得に失敗しました。"); }
      );
    } else {
      alert("お使いのブラウザでは位置情報取得がサポートされていません。");
    }
  };
</script>

<!-- JavaScript
<script>
  // 現在地を取得して緯度経度をhiddenフィールドに代入
  function getCurrentLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        document.getElementById('lat-field').value = position.coords.latitude;
        document.getElementById('lng-field').value = position.coords.longitude;
        document.getElementById('search-form').submit();
      }, function() {
        alert("位置情報の取得に失敗しました。");
      });
    } else {
      alert("お使いのブラウザでは位置情報取得がサポートされていません。");
    }
  }

  // 住所を入力したら、緯度経度をリセットする（優先順位を住所にする）
  document.addEventListener('DOMContentLoaded', () => {
    const addressInput = document.getElementById('address-input');
    addressInput.addEventListener('input', () => {
      document.getElementById('lat-field').value = "";
      document.getElementById('lng-field').value = "";
    });
  });
</script>-->

<!-- トップに戻るリンク -->
<div class="mt-6 text-center">
  <%= link_to '戻る', root_path, class: "text-blue-600 underline" %>
</div>
